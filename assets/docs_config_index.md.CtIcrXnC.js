import{_ as s,c as a,o as e,ag as t}from"./chunks/framework.SRfMZDhb.js";const u=JSON.parse('{"title":"Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"docs/config/index.md","filePath":"docs/config/index.md","lastUpdated":1756310327000}'),n={name:"docs/config/index.md"};function o(l,i,r,p,c,d){return e(),a("div",null,i[0]||(i[0]=[t(`<h1 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h1><p>Cruise supports a flexible configuration file for customizing themes, keybinds etc. We use a TOML format and the default config file is at:</p><ul><li>Linux/MacOS:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>~/.config/cruise/config.toml</span></span></code></pre></div><ul><li>Windows:</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>C:\\Users\\&lt;username&gt;\\.cruise\\config.toml</span></span></code></pre></div><h2 id="file-format" tabindex="-1">File Format <a class="header-anchor" href="#file-format" aria-label="Permalink to &quot;File Format&quot;">​</a></h2><p>Cruise uses TOML for its configuration file. Making it readable and easy to edit.</p><p>An example minimal file with vim motions (hjkl motions)</p><div class="language-toml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">keybinds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">global</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">up = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;k&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">down = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;j&quot;</span></span></code></pre></div><h2 id="key-sections" tabindex="-1">Key Sections <a class="header-anchor" href="#key-sections" aria-label="Permalink to &quot;Key Sections&quot;">​</a></h2><p>the config file has 3 main sections:</p><ul><li><strong>General</strong>: for general stuff such as shell, export_dir etc</li><li><strong>Styles</strong>: for customizing styles and colors</li><li><strong>Keybinds</strong>: for customizing keybinds</li></ul>`,13)]))}const g=s(n,[["render",o]]);export{u as __pageData,g as default};
